# For documentation on the github environment, see
# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
#
# For documentation on the syntax of this file, see
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: MSBuild

on:
  schedule:
    - cron: '00 21 * * *'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: windows-2019
    env:
      # Solution file names.
      EBPF_FOR_WINDOWS_SOLUTION_FILE: ebpf-for-windows.sln
      DEMO_SOLUTION_FILE: ebpf-for-windows-demo.sln

      # Configuration type to build.
      # You can convert this to a build matrix if you need coverage of multiple configuration types.
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

      BUILD_PLATFORM: x64

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@becb80cf9a036187bb1e07e74eb64e25850d757a

    - name: Install ProcDump64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        curl -fsSL -o Procdump.zip https://download.sysinternals.com/files/Procdump.zip
        7z x Procdump.zip -y -o"C:/Program Files/ProcDump"
        echo "C:\Program Files\ProcDump" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        mkdir c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        echo "test" > c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/test.txt

    - name: Set AeDebug registry key
      working-directory: c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: |
        procdump64.exe -accepteula -i -r -ma c:/dumps/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}

    - name: Install LLVM and Clang
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        curl -fsSL -o LLVM10.exe https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/LLVM-10.0.0-win64.exe
        7z x LLVM10.exe -y -o"C:/Program Files/LLVM"
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd external\ebpf-for-windows
        nuget restore ${{env.EBPF_FOR_WINDOWS_SOLUTION_FILE}}

    - name: Create verifier project
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd external\ebpf-for-windows
        cmake -G "Visual Studio 16 2019" -S external\ebpf-verifier -B external\ebpf-verifier\build

    - name: Create Catch2 project for eBPF-for-Windows-Demo
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -G "Visual Studio 16 2019" -S external\catch2 -B external\catch2\build -DBUILD_TESTING=OFF

    - name: Restore NuGet packages for eBPF-for-Windows-Demo
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        nuget restore ${{env.DEMO_SOLUTION_FILE}}

    - name: Build eBPF-for-Windows-Demo
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} /p:Analysis='True' ${{env.DEMO_SOLUTION_FILE_PATH}}

    - name: Upload Build Output
      uses: actions/upload-artifact@v2.2.4
      with:
        name: Build x64 ${{ matrix.configurations }}
        path: ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
        retention-days: 5

    - name: Upload Compiled Cilium XDP Files
      uses: actions/upload-artifact@v2.2.4
      with:
        name: x64-${{ matrix.configurations }}-cilium-xdp
        path: ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/cilium/object/*
        retention-days: 5

    - name: Run Cilium XDP Tests
      working-directory: ./${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}
      run: ./cilium_test.exe -s
